<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://dajyaretakuya.github.io</id><title>Takumoo</title><subtitle>适合宅男看的简单计算机理论</subtitle> <updated>2021-04-30T08:48:52+00:00</updated> <author> <name>Takuya Kanbara</name> <uri>https://dajyaretakuya.github.io</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dajyaretakuya.github.io" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Takuya Kanbara </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>在M1上尝试编译一些工具</title><link href="https://dajyaretakuya.github.io/posts/Build-code-on-apple-silicon/" rel="alternate" type="text/html" title="在M1上尝试编译一些工具" /><published>2021-01-09T07:52:00+00:00</published> <updated>2021-04-30T08:48:52+00:00</updated> <id>https://dajyaretakuya.github.io/posts/Build-code-on-apple-silicon/</id> <content src="https://dajyaretakuya.github.io/posts/Build-code-on-apple-silicon/" /> <author> <name>Takuya Kanbara</name> </author> <category term="Machine Learning" /> <category term="Mathematics" /> <summary> 本文写于2021年1月9日且内容极具时效性，如果您在阅读的时候发现有信息已经过时，可以去对应项目的官网查看最新说明。 1 编译器 目前，GCC仍不支持M1的编译。尽管使用Rosetta2可以，但编译出的结果仍然是x86平台的目标代码。因此唯一的选择是MacOS自带的Clang。 2 Homebrew 光有编译器还不行，大型C++项目通常有各种各样的依赖。而Homebrew是管...</summary> </entry> <entry><title>随笔+书籍推荐：《实时流协议概况》</title><link href="https://dajyaretakuya.github.io/posts/diary-and-book-realtime-steam-protocol/" rel="alternate" type="text/html" title="随笔+书籍推荐：《实时流协议概况》" /><published>2019-11-12T18:47:00+00:00</published> <updated>2021-04-30T08:48:52+00:00</updated> <id>https://dajyaretakuya.github.io/posts/diary-and-book-realtime-steam-protocol/</id> <content src="https://dajyaretakuya.github.io/posts/diary-and-book-realtime-steam-protocol/" /> <author> <name>Takuya Kanbara</name> </author> <category term="Miscellaneous" /> <category term="Life" /> <summary>高维几何还没有写完，又打算开新坑了（苦笑），一方面是高维几何的一些理论的编写以及研究很耗时，另一方面是近期主要的项目都和GUI相关，所以打算整理一下基础理论。 另外，家里的书太多，近期打算整理下，之前很多书都是强行塞进去的，并不规整。 我想考虑一下按照类别进行整理，希望不要给自己挖坑2333。 另外推荐一个电子书，里面包含了现代互联网实时通信的几个主流技术基础以及相关文档的...</summary> </entry> <entry><title>深入理解GUI (一) GUI的基本理论（未完）</title><link href="https://dajyaretakuya.github.io/posts/GUI-Introduction/" rel="alternate" type="text/html" title="深入理解GUI (一) GUI的基本理论（未完）" /><published>2019-10-05T07:52:00+00:00</published> <updated>2021-04-30T08:48:52+00:00</updated> <id>https://dajyaretakuya.github.io/posts/GUI-Introduction/</id> <content src="https://dajyaretakuya.github.io/posts/GUI-Introduction/" /> <author> <name>Takuya Kanbara</name> </author> <category term="Computers" /> <category term="OS" /> <summary>第一章 概述 1 一点历史 下述历史内容基本都是从Wikipedia得来，仅供参考 人机交互 ( Human–Computer Interaction ) 领域研究如何在人与计算机之间建造高效沟通的桥梁，这个桥梁就是我们现在经常听到的用户界面 ( User Interface, UI ) 。UI 无处不在，可以说，只要涉及到人机交互的设备：游戏机、手机、MP3播放器、嵌入式设备...</summary> </entry> <entry><title>高维数据算法基础 (一) 高维数据的基本概念(未完)</title><link href="https://dajyaretakuya.github.io/posts/high-dimensional-data-algorithm-1/" rel="alternate" type="text/html" title="高维数据算法基础 (一) 高维数据的基本概念(未完)" /><published>2019-10-05T07:52:00+00:00</published> <updated>2021-04-30T08:48:52+00:00</updated> <id>https://dajyaretakuya.github.io/posts/high-dimensional-data-algorithm-1/</id> <content src="https://dajyaretakuya.github.io/posts/high-dimensional-data-algorithm-1/" /> <author> <name>Takuya Kanbara</name> </author> <category term="Machine Learning" /> <category term="Mathematics" /> <summary>1 什么是高维数据 高维数据这个名词听着挺吓人的，但其实我们日常开发中不知不觉已经接触过很多了。例如我们最常用的Elastic Search搜索引擎，其核心算法就是把要搜索的文档转换成某种数据形式存储起来，在有搜索请求的时候，执行某种算法，将相关的文档尽可能的全部召唤出来，并按照相关度从高到低排序。又例如我们经常用到的商品推荐系统，大家耳熟能详的协同过滤，其实是通过一种特殊的矩阵为核心理论实...</summary> </entry> <entry><title>C++模板的一些二义性语法讨论</title><link href="https://dajyaretakuya.github.io/posts/typename-in-cplusplus-template/" rel="alternate" type="text/html" title="C++模板的一些二义性语法讨论" /><published>2019-09-13T03:38:00+00:00</published> <updated>2021-04-30T08:48:52+00:00</updated> <id>https://dajyaretakuya.github.io/posts/typename-in-cplusplus-template/</id> <content src="https://dajyaretakuya.github.io/posts/typename-in-cplusplus-template/" /> <author> <name>Takuya Kanbara</name> </author> <category term="Computers" /> <category term="Coding" /> <summary>首先大家看下面一段代码： 1 2 3 4 5 6 7 8 9 10 template&amp;lt;typename T&amp;gt; std::vector&amp;lt;T&amp;gt;&amp;amp; arrayRotate(const std::vector&amp;lt;T&amp;gt;&amp;amp; src) { std::vector&amp;lt;T&amp;gt; dst(src.size()); for (std::vector&amp;lt...</summary> </entry> </feed>
